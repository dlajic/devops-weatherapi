services:
  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: weather
      POSTGRES_PASSWORD: weather123
      POSTGRES_DB: weatherdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build: ./fastapi-service
    container_name: fastapi-backend
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://weather:weather123@db:5432/weatherdb
    ports:
      - "8000:8000"
    volumes:
      - ./fastapi-service:/fastapi-service


  airflow-db:
    image: postgres:15
    container_name: airflow-db
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-db
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=mysupersecret
      - PYTHONPATH=/opt/shared-code
    command: scheduler
    volumes:
      #- ./airflow/dags:/opt/airflow/dags
      #- ./fastapi-service/app:/opt/shared-code/app


  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-db
      - airflow-scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__WEBSERVER__SECRET_KEY=mysupersecret
      - PYTHONPATH=/opt/shared-code
    command: webserver
    ports:
      - "8080:8080"
    volumes:
      #- ./airflow/dags:/opt/airflow/dags
      #- ./fastapi-service/app:/opt/shared-code/app

  frontend:
    build: ./frontend
    container_name: weather-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app

volumes:
  postgres_data:
  airflow_postgres_data: